name: Deploy to Minikube

on:
  push:
    branches:
      - main  # Déclenche le workflow sur push vers main

jobs:
  deploy:
    runs-on: self-hosted  # Utilise un runner auto-hébergé

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GH_TOKEN }}
      
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '17'  # Remplacez par la version que vous utilisez
          distribution: 'temurin'
      
      - name: Grant execute permission for mvnw
        run: chmod +x mvnw  # Donne les permissions d'exécution à mvnw

      - name: Build with Maven
        run: ./mvnw clean package -DskipTests

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build and push backend image
      - name: Build and push backend image
        uses: docker/build-push-action@v5
        with:
          context: .  # Répertoire du backend contenant le Dockerfile
          file: src/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/demo-enset-student_backend:latest

      - name: Set npm registry
        run: npm config set registry https://registry.npmjs.org

      - name: Clean npm cache and install frontend dependencies
        working-directory: ./frontend-angular
        run: |
          npm cache clean
          rm package-lock.json
          rm -rf node_modules
          npm install

      
      - name: Build frontend project
        working-directory: ./frontend-angular  # Toujours dans le dossier frontend
        run: npm run build

      # Build and push frontend image
      - name: Build and push frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend-angular  # Répertoire du frontend contenant le Dockerfile
          file: ./frontend-angular/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/demo-enset-student_frontend:latest

      - name: Logout from Docker Hub
        run: docker logout

      # Vérification de kubectl pour Minikube et déploiement
      - name: Check kubectl Minikube configuration
        run: |
          if ! kubectl get nodes; then
            echo "kubectl is not configured correctly for Minikube"
            exit 1
          fi
      
      - name: Deploy to Minikube
        run: kubectl apply -f k8s/
