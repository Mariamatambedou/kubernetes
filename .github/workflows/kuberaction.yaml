name: Deploy to Minikube

on:
  push:
    branches:
      - main  # Déclenche le workflow sur push vers main

jobs:
  deploy:
    runs-on: self-hosted  # Utilise un runner auto-hébergé
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GH_TOKEN }}
     - name: Set up JDK
       uses: actions/setup-java@v2
       with:
          java-version: '17'  # Remplacez par la version que vous utilisez

      - name: Grant execute permission for mvnw
        run: chmod +x mvnw  # Donne les permissions d'exécution à mvnw

      - name: Build with Maven
        run: ./mvnw clean package  # Utilise le wrapper Maven

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      

      # Build and push backend image
      - name: Build and push backend image
        uses: docker/build-push-action@v5
        with:
          context: .  # Répertoire du backend contenant le Dockerfile
          file: src/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/demo-enset-student_backend:latest

      - name: Build frontend Angular app
        run: |
              cd frontend-angular
              npm install
              npm run build --prod


      # Build and push frontend image
      - name: Build and push frontend image
        uses: docker/build-push-action@v5
        with:
          context: .  # Répertoire du frontend contenant le Dockerfile
          file: ./frontend-angular/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/demo-enset-student_frontend:latest

      - name: Logout from Docker Hub
        run: docker logout

      - name: Set up kubectl
        run: |
          # Vérifiez si kubectl est configuré pour Minikube
          kubectl get nodes
      - name: Deploy
        run: |
          kubectl apply -f k8s/ 

